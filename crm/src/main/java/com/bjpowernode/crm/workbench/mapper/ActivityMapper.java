package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Tue Aug 16 16:37:14 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    //创建市场活动
    int insertCreateActivity(Activity activity);
    //查询所有的市场活动
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);
    //查询市场活动记录数

    /**
     * 查询市场活动记录
     * @param map
     * @return int
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据选中的数据的id进行删除
     * @param id
     * @return
     */
    int deleteActivityByIds(String[] id);

    /**
     * 根据隐藏域id进行数据的查询 然后进行数据回显
     * @param id
     * @return
     */
    Activity selectActivityById(String id);

    /**
     * 更新市场活动
     * @param activity
     * @return
     */
    int updateActivity(Activity activity);

    /**
     * 查询所有的市场活动
     * @return
     */
    List<Activity> selectAllActivities ();

    /**
     * 将导入的文件转换为java对象持久化到数据库中
     * @param activityList
     * @return
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     * 根据前端传来的id进行查询 显示市场活动详情页面
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);
}